ext {

    // Android
    androidBuildToolsVersion = "28.0.3"
    androidMinSdkVersion = 26
    androidTargetSdkVersion = 28
    androidCompileSdkVersion = 28
    kotlinVersion = '1.3.30'

    // Libraries
    supportLibraryVersion = '26.1.0'
    appCompatVersion = '1.1.0-alpha04'
    rxJavaVersion = '2.0.2'
    javaxAnnotationVersion = '1.0'
    javaxInjectVersion = '1'
    rxJavaVersion = '2.0.2'
    rxKotlinVersion = '2.1.0'
    rxAndroidVersion = '2.0.1'
    androidAnnotationsVersion = '21.0.3'
    daggerVersion = '2.16'
    retrofitVersion = '2.3.0'
    okHttpVersion = '3.8.1'
    gsonVersion = '2.8.5'
    retrofitVersion = '2.4.0'
    supportLibraryVersion = '26.1.0'
    timberVersion = '4.7.1'
    glideVersion = '4.9.0'
    glassfishAnnotationVersion = '10.0-b28'
    archCompVersion = '1.1.1'
    roomVersion = '2.0.0'
    constraintLayoutVersion = '2.0.0-alpha4'
    materialDesignVersion = '1.0.0'
    archComponents = '2.1.0-alpha04'
    jetpackKotlinVersion = '1.1.0-alpha05'
    androidXLegacyVersion = "1.0.0"

    // Testing
    jUnitVersion = '4.13-beta-2'
    assertJVersion = '3.12.2'
    mockitoKotlinVersion = '1.5.0'
    espressoVersion = '3.2.0-alpha04'
    robolectricVersion = '4.3-alpha-2'
    mockitoVersion = '1.9.5'
    mockitoAndroidVersion = '2.8.9'
    mockitoInlineVersion = '2.8.47'
    androidSupportRunnerVersion = '1.0.0'
    androidSupportRulesVersion = '1.0.0'
    dexmakerMockitoversion = '2.2.0'
    runnerVersion = '1.2.0-alpha04'

    domainDependencies = [
            javaxAnnotation:        "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:            "javax.inject:javax.inject:${javaxInjectVersion}",
            rxJava:                 "io.reactivex.rxjava2:rxkotlin:${rxJavaVersion}"
    ]

    domainTestDependencies = [
            junit:                  "junit:junit:${jUnitVersion}",
            mockito:                "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            assertj:                "org.assertj:assertj-core:${assertJVersion}",
            mockitoInline:          "org.mockito:mockito-inline:${mockitoInlineVersion}",
    ]

    dataDependencies = [
            rxKotlin:               "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:                 "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}",
            javaxAnnotation:        "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:            "javax.inject:javax.inject:${javaxInjectVersion}",
    ]

    dataTestDependencies = [
            junit:                  "junit:junit:${jUnitVersion}",
            kotlinJUnit:            "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            assertj:                "org.assertj:assertj-core:${assertJVersion}",
            mockito:                "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric:            "org.robolectric:robolectric:${robolectricVersion}",
            mockitoInline:          "org.mockito:mockito-inline:${mockitoInlineVersion}",
    ]

    remoteDependencies = [
            gson:                   "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin:               "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:                 "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}",
            javaxAnnotation:        "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:            "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations:     "com.android.support:support-annotations:${androidAnnotationsVersion}",
            okHttp:                 "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger:           "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            retrofit:               "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter:      "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter:        "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    ]

    remoteTestDependencies = [
            junit:                  "junit:junit:${jUnitVersion}",
            kotlinJUnit:            "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:                "org.assertj:assertj-core:${assertJVersion}",
            mockito:                "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
    ]

    cacheDependencies = [
            daggerCompiler:         "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger:                 "com.google.dagger:dagger:${daggerVersion}",
            gson:                   "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin:               "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:                 "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            javaxAnnotation:        "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:            "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations:     "com.android.support:support-annotations:${androidAnnotationsVersion}",
            roomRuntime:            "androidx.room:room-runtime:2.0.0",
            roomCompiler:           "androidx.room:room-compiler:2.0.0",
            roomRxJava:             "androidx.room:room-rxjava2:2.0.0"
    ]

    cacheTestDependencies = [
            junit:                  "junit:junit:${jUnitVersion}",
            kotlinJUnit:            "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            robolectric:            "org.robolectric:robolectric:${robolectricVersion}",
            assertj:                "org.assertj:assertj-core:${assertJVersion}",
            mockito:                "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            roomTesting:            "androidx.room:room-testing:2.0.0",
            archTesting:            "androidx.arch.core:core-testing:2.0.0",
            supportRunner:          "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules:           "com.android.support.test:rules:${androidSupportRulesVersion}"
    ]

    presentationDependencies = [
            daggerCompiler:         "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger:                 "com.google.dagger:dagger:${daggerVersion}",
            rxKotlin:               "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:                 "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            rxAndroid:              "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            javaxAnnotation:        "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:            "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations:     "com.android.support:support-annotations:${androidAnnotationsVersion}",
            archRuntime:            "androidx.lifecycle:lifecycle-runtime:2.0.0",
            archExtensions:         "androidx.lifecycle:lifecycle-extensions:2.0.0",
            archCompiler:           "androidx.lifecycle:lifecycle-compiler:2.0.0",
    ]

    presentationTestDependencies = [
            junit:                  "junit:junit:${jUnitVersion}",
            kotlinJUnit:            "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:                "org.assertj:assertj-core:${assertJVersion}",
            mockito:                "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric:            "org.robolectric:robolectric:${robolectricVersion}",
            archTesting:            "androidx.arch.core:core-testing:2.0.0",
    ]

    mobileUiDependencies = [
            kotlin:                 "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            constraintLayout:       "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}",
            javaxAnnotation:        "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:            "javax.inject:javax.inject:${javaxInjectVersion}",
            rxKotlin:               "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            androidAnnotations:     "com.android.support:support-annotations:${androidAnnotationsVersion}",
            appCompat:              "androidx.appcompat:appcompat:${appCompatVersion}",
            materialDesign:         "com.google.android.material:material:${materialDesignVersion}",
            timber:                 "com.jakewharton.timber:timber:${timberVersion}",
            rxAndroid:              "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            glide:                  "com.github.bumptech.glide:glide:${glideVersion}",
            dagger:                 "com.google.dagger:dagger:${daggerVersion}",
            daggerCompiler:         "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerSupport:          "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerAndroid:          "com.google.dagger:dagger-android:${daggerVersion}",
            daggerProcessor:        "com.google.dagger:dagger-android-processor:${daggerVersion}",
            roomRuntime:            "androidx.room:room-runtime:${roomVersion}",
            roomCompiler:           "androidx.room:room-compiler:${roomVersion}",
            roomRxJava:             "androidx.room:room-rxjava2:${roomVersion}",
            archRuntime:            "androidx.lifecycle:lifecycle-runtime:${archComponents}",
            archExtensions:         "androidx.lifecycle:lifecycle-extensions:${archComponents}",
            archCompiler:           "androidx.lifecycle:lifecycle-compiler:${archComponents}",
            archViewmodel:          "androidx.lifecycle:lifecycle-viewmodel-ktx:${archComponents}",
            kotlinExt:              "androidx.core:core-ktx:${jetpackKotlinVersion}",
            glassfishAnnotation:    "org.glassfish:javax.annotation:${glassfishAnnotationVersion}",
            androidXLegacy:         "androidx.legacy:legacy-support-v4:${androidXLegacyVersion}"
    ]

    mobileUiTestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            supportRunner:      "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules:       "com.android.support.test:rules:${androidSupportRulesVersion}",
            mockitoAndroid:     "org.mockito:mockito-android:${mockitoAndroidVersion}",
            espressoCore:       "com.android.support.test.espresso:espresso-core:${espressoVersion}",
            espressoIntents:    "com.android.support.test.espresso:espresso-intents:${espressoVersion}",
            espressoContrib:    "com.android.support.test.espresso:espresso-contrib:${espressoVersion}",
            androidRunner:      "com.android.support.test:runner:${runnerVersion}",
            androidRules:       "com.android.support.test:rules:${runnerVersion}"

    ]

}